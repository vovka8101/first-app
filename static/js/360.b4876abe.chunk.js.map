{"version":3,"file":"static/js/360.b4876abe.chunk.js","mappings":"wJACA,MAA0B,yBAA1B,EAA6D,yBAA7D,EAA8F,uBAA9F,EAAgI,0BAAhI,EAAwK,6BAAxK,EAAiN,2BCAjN,GAAgB,SAAW,uBAAuB,QAAU,sBAAsB,OAAS,sB,mBCe3F,EAba,SAACA,GACZ,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,gBAAKC,UAAWC,EAAAA,SAAW,UACzB,UAAC,KAAO,CAACC,GAAIJ,EAAME,UAAW,SAAAG,GAAO,OAAIA,EAAQC,SAAWH,EAAAA,YAAWI,CAAS,EAAC,WAC/E,gBAAKL,UAAWC,EAAAA,QAAU,UAAC,gBAAKK,IAAKT,EAAMU,MAAOC,IAAI,WACtD,gBAAKR,UAAWC,EAAAA,SAAW,SAAEJ,EAAMY,WAI3C,ECLA,G,QANgB,SAACZ,GACf,OACE,gBAAKG,UAAWC,EAAc,SAAEJ,EAAMa,SAE1C,G,UCuCA,EAxCgB,SAACb,GAEf,IAAMc,EAAgBd,EAAMe,QAAQC,MACjCC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAI,CAAChB,GAAIgB,EAAKhB,GAAIU,KAAMM,EAAKN,KAAMF,MAAOQ,EAAKC,QAAaD,EAAKhB,GAAM,IAEjFkB,EAAmBpB,EAAMe,QAAQM,SACpCJ,KAAI,SAAAK,GAAG,OAAI,SAAC,EAAO,CAACT,QAASS,EAAIT,SAAcS,EAAIpB,GAAM,IAE5D,OACE,iBAAKC,UAAWC,EAAU,WACxB,qCAEA,iBAAKD,UAAWC,EAAU,WACxB,gBAAKD,UAAWC,EAAQ,SACrBU,KAGH,gBAAKX,UAAWC,EAAW,SACxBgB,KAGH,SAAC,KAAM,CACLG,cAAe,CAAEV,QAAS,IAC1BW,SAAU,SAACC,EAAO,GAAoB,IAAjBC,EAAS,EAATA,UACnB1B,EAAM2B,WAAWF,EAAOZ,SACxBa,EAAU,CAAED,OAAQ,IACtB,EAAE,SAED,gBAAGA,EAAM,EAANA,OAAM,OACR,UAAC,KAAI,CAACtB,UAAWC,EAAY,WAC3B,SAAC,KAAK,CAACwB,GAAG,WAAWhB,KAAK,UAAUiB,YAAY,wBAChD,mBAAQC,KAAK,SAASC,UAAWN,EAAOZ,QAAQ,oBAC3C,SAMnB,E,8BCjCA,GAAemB,E,QAAAA,KACbC,EAAAA,EAAAA,KALsB,SAACC,GAAK,MAAM,CAClCnB,QAASmB,EAAMnB,QAChB,GAG0B,CAAEY,WAAAA,EAAAA,IAC3BQ,EAAAA,EAFF,CAGEC,E","sources":["webpack://first-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://first-app/./src/components/Dialogs/User/User.module.css?cd91","components/Dialogs/User/User.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__xL2fw\",\"dialogs\":\"Dialogs_dialogs__dJyV5\",\"users\":\"Dialogs_users__gSFEE\",\"messages\":\"Dialogs_messages__88CWx\",\"messageItem\":\"Dialogs_messageItem__KvJFt\",\"inputArea\":\"Dialogs_inputArea__bBOFl\"};","// extracted by mini-css-extract-plugin\nexport default {\"userItem\":\"User_userItem__VrVvC\",\"userImg\":\"User_userImg__hZcDA\",\"active\":\"User_active__k1DRf\"};","import s from './User.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={s.userItem}>\r\n      <NavLink to={path} className={navData => navData.isActive ? s.active : undefined}>\r\n        <div className={s.userImg}><img src={props.photo} alt=\"Ava\" /></div>\r\n        <div className={s.userName}>{props.name}</div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.messageItem}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;","import s from './Dialogs.module.css';\r\nimport User from './User/User';\r\nimport Message from './Message/Message';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  const usersElements = props.dialogs.users\r\n    .map(user => <User id={user.id} name={user.name} photo={user.imgSrc} key={user.id} />);\r\n\r\n  const messagesElements = props.dialogs.messages\r\n    .map(msg => <Message message={msg.message} key={msg.id} />);\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <h2>Dialogs</h2>\r\n\r\n      <div className={s.dialogs}>\r\n        <div className={s.users}>\r\n          {usersElements}\r\n        </div>\r\n\r\n        <div className={s.messages}>\r\n          {messagesElements}\r\n        </div>\r\n\r\n        <Formik\r\n          initialValues={{ message: '' }}\r\n          onSubmit={(values, { resetForm }) => {\r\n            props.addMessage(values.message);\r\n            resetForm({ values: '' })\r\n          }}\r\n        >\r\n          {({ values }) => (\r\n            <Form className={s.inputArea}>\r\n              <Field as=\"textarea\" name=\"message\" placeholder=\"Write a message...\" />\r\n              <button type=\"submit\" disabled={!values.message}>Send</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { addMessage } from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dialogs: state.dialogs\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addMessage }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","path","id","className","s","to","navData","isActive","undefined","src","photo","alt","name","message","usersElements","dialogs","users","map","user","imgSrc","messagesElements","messages","msg","initialValues","onSubmit","values","resetForm","addMessage","as","placeholder","type","disabled","compose","connect","state","withAuthRedirect","Dialogs"],"sourceRoot":""}